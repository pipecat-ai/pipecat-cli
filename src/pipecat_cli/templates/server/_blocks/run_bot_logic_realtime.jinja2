{# Main bot logic for realtime mode - uses indent_level variable passed from parent #}
{{ "# Realtime LLM service (handles STT, LLM, and TTS internally)" | indent(indent_level, first=True) }}
{% if realtime_service and realtime_service in service_configs %}
{{ service_configs[realtime_service] | indent(indent_level, first=True) }}
{% endif %}

{{ "# Video service (avatar)" | indent(indent_level, first=True) }}
{% if video_service and video_service in service_configs %}
{{ ("video = " ~ service_configs[video_service]) | indent(indent_level, first=True) }}
{% endif %}

{{ helpers.setup_context() | indent(indent_level, first=True) }}

{{ helpers.setup_feature_processors(recording, transcription, bot_type) | indent(indent_level, first=True) }}

{{ "# Pipeline - assembled from reusable components" | indent(indent_level, first=True) }}
{{ pipeline.realtime_pipeline(bot_type, transcription, recording, video_service) | indent(indent_level, first=True) }}

{{ "task = PipelineTask(" | indent(indent_level, first=True) }}
{{ "pipeline," | indent(indent_level + 4, first=True) }}
{{ "params=PipelineParams(" | indent(indent_level + 4, first=True) }}
{{ "enable_metrics=True," | indent(indent_level + 8, first=True) }}
{{ "enable_usage_metrics=True," | indent(indent_level + 8, first=True) }}
{{ ")," | indent(indent_level + 4, first=True) }}
{% if bot_type == 'web' or enable_observability %}
{{ "observers=[" | indent(indent_level + 4, first=True) }}
{% if bot_type == 'web' %}
{{ "RTVIObserver(rtvi)," | indent(indent_level + 8, first=True) }}
{% endif %}
{% if enable_observability %}
{{ "WhiskerObserver(pipeline)," | indent(indent_level + 8, first=True) }}
{{ "TailObserver()," | indent(indent_level + 8, first=True) }}
{% endif %}
{{ "]," | indent(indent_level + 4, first=True) }}
{% endif %}
{{ ")" | indent(indent_level, first=True) }}

{% if 'daily_pstn_dialout' in transports or 'twilio_daily_sip_dialout' in transports %}
{{ "# Initialize dialout manager" | indent(indent_level, first=True) }}
{{ "dialout_manager = DialoutManager(transport, dialout_settings)" | indent(indent_level, first=True) }}

{% endif %}
{# Event handlers - use macros based on transport type #}
{% if 'daily_pstn_dialin' in transports %}
{{ handlers.daily_pstn_dialin_handlers(recording) | indent(indent_level, first=True) }}
{% elif 'daily_pstn_dialout' in transports %}
{{ handlers.daily_pstn_dialout_handlers(recording) | indent(indent_level, first=True) }}
{% elif 'twilio_daily_sip_dialin' in transports %}
{{ handlers.twilio_daily_sip_dialin_handlers(recording) | indent(indent_level, first=True) }}
{% elif 'twilio_daily_sip_dialout' in transports %}
{{ handlers.twilio_daily_sip_dialout_handlers(recording) | indent(indent_level, first=True) }}
{% else %}
{{ handlers.standard_handlers(recording) | indent(indent_level, first=True) }}
{% endif %}

{# Feature-specific event handlers #}
{% if transcription %}
{{ handlers.transcription_handler() | indent(indent_level, first=True) }}
{% endif %}

{% if recording %}
{{ handlers.recording_handler() | indent(indent_level, first=True) }}
{% endif %}

{{ "runner = PipelineRunner(handle_sigint=False)" | indent(indent_level, first=True) }}

{{ "await runner.run(task)" | indent(indent_level, first=True) }}

