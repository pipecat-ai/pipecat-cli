## Project Structure

{{project_name}}/
├── server/              # Python bot server
│   ├── bot.py           # Main bot implementation
│   ├── server.py        # FastAPI webhook server for Daily PSTN dial-in
│   ├── server_utils.py  # Utility functions starting the bot
│   ├── pyproject.toml   # Python dependencies
│   ├── env.example      # Environment variables template
│   ├── .env             # Your API keys (git-ignored)
│   ├── Dockerfile       # Container image for Pipecat Cloud
│   └── pcc-deploy.toml  # Pipecat Cloud deployment config
├── .gitignore           # Git ignore patterns
└── README.md            # This file

This example is organized to be production-ready and easy to customize:

- **`server.py`** - FastAPI webhook server that handles incoming calls

  - Receives Daily PSTN webhooks
  - Creates Daily rooms
  - Routes to local or production bot deployment
  - Uses shared HTTP session for optimal performance

- **`server_utils.py`** - Utilities for the FastAPI server to start the bot

  - Data models for call data and agent requests
  - Room creation logic
  - Bot starting logic (production and local modes)
  - Easy to extend with custom business logic

- **`bot.py`** - The voice bot implementation
  - Handles the conversation with the caller
  - Deployed to Pipecat Cloud in production or run locally for development

